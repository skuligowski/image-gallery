swagger: "2.0"
info:
  version: 1.0.0
  title: Image gallery api
basePath: /api
schemes:
- http
consumes:
- application/json
produces:
- application/json
- text/plain
paths:
  /config:
    x-swagger-router-controller: config.controller
    get:
      description: Return base configuration for gallery
      tags:
        - gallery
      operationId: getConfig
      responses:
        200:
          description: offering created
          schema:
            $ref: defs/Config.yaml


  /albums:
    x-swagger-router-controller: albums.controller
    get:
      x-authentication-required: true
      description: Returns all albums meta definition from the gallery
      tags:
      - gallery
      operationId: getAlbums
      responses:
        200:
          description: offering created
          schema:
            $ref: defs/AlbumsResponse.yaml
        401:
          description: User unauthorized
          schema:
            type: string
    post:
      x-authentication-required: true
      x-admin-required: true
      description: Creates a new album
      tags:
      - admin
      operationId: createAlbum
      parameters:
      - name: AlbumCreateRequest
        in: body
        description: Album create request
        schema:
          $ref: defs/AlbumCreateRequest.yaml
      responses:
        200:
          description: album created
          schema:
            $ref: defs/AlbumCreateResponse.yaml
          

  /albums/{id}:
    x-swagger-router-controller: albums.controller
    delete:
      x-authentication-required: true
      x-admin-required: true
      description: Removes album
      tags:
      - admin
      operationId: removeAlbum
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the album
      responses:
        201:
          description: album deleted
    patch:
      x-authentication-required: true
      x-admin-required: true
      description: Updates existing album
      tags:
      - admin
      operationId: updateAlbum
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the album
      - name: AlbumUpdateRequest
        in: body
        description: Album update request
        schema:
          $ref: defs/AlbumUpdateRequest.yaml
      responses:
        200:
          description: album updated


  /albums/{id}/images:
    x-swagger-router-controller: albums.controller
    get:
      x-authentication-required: true
      description: Returns album with all images
      tags:
      - gallery
      operationId: getImages
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Id of the album
      responses:
        200:
          description: offering created
          schema:
            $ref: defs/ImagesResponse.yaml
        404:
          description: An album with given id was not found
    post:
      x-authentication-required: true
      x-admin-required: true
      description: Adds images to the album
      tags:
      - admin
      operationId: addImages
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: Id of the album
      - name: ImagesAddRequest
        in: body
        description: Adding images request
        schema:
          $ref: defs/ImagesAddRequest.yaml
      responses:
        200:
          description: offering created
          schema:
            $ref: defs/ImagesResponse.yaml
        404:
          description: An album with given id was not found


  /albums/{id}/images/order:
    x-swagger-router-controller: albums.controller
    post:
      x-authentication-required: true
      x-admin-required: true
      description: Create order for images
      tags:
        - admin
      operationId: setImagesOrder
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Id of the album
        - name: ImagesOrderRequest
          in: body
          description: Adding images request
          schema:
            $ref: defs/ImagesOrderRequest.yaml
      responses:
        200:
          description: new order created
        400:
          description: An album with given id was not found


  /albums/{id}/images/removal:
    x-swagger-router-controller: albums.controller
    post:
      x-authentication-required: true
      x-admin-required: true
      description: Removes images from the album
      tags:
        - admin
      operationId: removeImages
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Id of the album
        - name: ImagesRemovalRequest
          in: body
          description: Removing images request
          schema:
            $ref: defs/ImagesRemovalRequest.yaml
      responses:
        201:
          description: Action successfull
        404:
          description: An album with given id was not found


  /albums/{id}/images/{filename}:
    x-swagger-router-controller: albums.controller
    get:
      description: Download image from the album
      tags:
        - gallery
      operationId: downloadImage
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Id of the album
        - in: path
          name: filename
          type: string
          required: true
          description: File name to download
      produces:
        - image/png
        - image/jpg
        - image/jpeg
        - image/gif
      responses:
        200:
          description: offering created
          schema:
            type: file
        404:
          description: Requested image was not found


  /thumbnails:
    x-swagger-router-controller: thumbnails.controller
    post:
      x-authentication-required: true
      x-admin-required: true
      description: Creates, regenerates thumbnails for selected image
      tags:
        - admin
      operationId: createThumbnail
      parameters:
        - name: ThumbnailsCreateRequest
          in: body
          description: Thumbnail regeneration request
          schema:
            $ref: defs/ThumbnailsCreateRequest.yaml
      responses:
        201:
          description: Action successfull
        404:
          description: An album with given id was not found

  /albums/{id}/processing:
      x-swagger-router-controller: processing.controller
      post:
        x-authentication-required: true
        x-admin-required: true
        description: Processes images
        tags:
          - admin
        operationId: processImage
        parameters:
          - in: path
            name: id
            type: string
            required: true
            description: Id of the album
          - name: ProcessingRequest
            in: body
            description: Batch Processing Request
            schema:
              $ref: defs/ProcessingRequest.yaml
        responses:
          201:
            description: Action successfull
          404:
            description: An album with given id was not found

  /albums/{id}/processing/revert:
      x-swagger-router-controller: processing.controller
      post:
        x-authentication-required: true
        x-admin-required: true
        description: Revert processed images
        tags:
          - admin
        operationId: revertProcessedImages
        parameters:
          - in: path
            name: id
            type: string
            required: true
            description: Id of the album
          - name: ProcessingRevertRequest
            in: body
            description: Processing Revert Request
            schema:
              $ref: defs/ProcessingRevertRequest.yaml
        responses:
          201:
            description: Action successfull
          404:
            description: An album with given id was not found

  /library/files:
    x-swagger-router-controller: library.controller
    get:
      x-authentication-required: true
      x-admin-required: true
      description: Returns files from the library relative to given node
      tags:
        - library
      operationId: getFiles
      parameters:
        - in: query
          name: parent
          type: string
      responses:
        200:
          description: Files
          schema:
            $ref: defs/LibraryFilesResponse.yaml
        401:
          description: User unauthorized
          schema:
            type: string


  /library/directories:
    x-swagger-router-controller: library.controller
    post:
      x-authentication-required: true
      x-admin-required: true
      description: Returns files from the library relative to given node
      tags:
        - library
      operationId: createDirectory
      parameters:
        - in: query
          name: parent
          type: string
        - name: AlbumCreateRequest
          in: body
          description: Album create request
          schema:
            $ref: defs/DirectoryCreateRequest.yaml
      responses:
        201:
          description: Directory created
        401:
          description: User unauthorized
          schema:
            type: string


  /login:
    x-swagger-router-controller: auth.controller
    post:
      description: Logs user into the application
      tags:
      - auth
      operationId: login
      parameters:
        - name: LoginRequest
          in: body
          description: Login credentials
          schema:
            $ref: defs/Login.yaml
      responses:
        200:
          description: User authenticated
          schema:
            $ref: defs/User.yaml
        401:
          description: User unauthorized
          schema:
            type: string


  /logout:
    x-swagger-router-controller: auth.controller
    post:
      description: Log outs user from the application
      tags:
        - auth
      operationId: logout
      responses:
        200:
          description: User authenticated


  /user:
    x-swagger-router-controller: auth.controller
    get:
      x-authentication-required: true
      description: Logs user into the application
      tags:
      - auth
      operationId: getUser
      responses:
        200:
          description: User authenticated
          schema:
            $ref: defs/User.yaml
        401:
          description: User unauthorized
          schema:
            type: string


  /upload:
    x-swagger-router-controller: albums.controller
    post:
      x-authentication-required: true
      x-admin-required: true
      consumes:
      - multipart/form-data
      description: Logs user into the application
      tags:
      - admin
      operationId: uploadFile
      parameters:
      - in: query
        name: parent
        type: string
      - in: formData
        name: file
        type: file
        required: true
      responses:
        200:
          description: User authenticated
          schema:
            type: object
        401:
          description: User unauthorized
          schema:
            type: string


  /users:
    x-swagger-router-controller: users.controller
    get:
      x-authentication-required: true
      x-admin-required: true
      description: Returns all users that are registered in gallery
      tags:
        - users
      operationId: getUsers
      responses:
        200:
          description: offering created
          schema:
            $ref: defs/UsersResponse.yaml
        401:
          description: User unauthorized
          schema:
            type: string
    post:
      x-authentication-required: true
      x-admin-required: true
      description: Creates a new user
      tags:
        - users
      operationId: createUser
      parameters:
         - name: UserAddRequest
           in: body
           description: Adding user request
           schema:
             $ref: defs/UserCreateRequest.yaml
      responses:
        201:
          description: User created
        401:
          description: User unauthorized
          schema:
            type: string
    delete:
      x-authentication-required: true
      x-admin-required: true
      description: Removes user, admin cannot be removed
      tags:
        - users
      operationId: removeUser
      parameters:
        - in: query
          name: username
          type: string
      responses:
        200:
          description: User deleted
        401:
          description: User unauthorized
          schema:
            type: string


  /users/password:
    x-swagger-router-controller: users.controller
    patch:
      x-authentication-required: true
      x-admin-required: true
      description: Changes password of logged user
      tags:
        - users
      operationId: changePassword
      parameters:
        - name: UserPasswordChangeRequest
          in: body
          description: Change password request
          schema:
            $ref: defs/UserPasswordChangeRequest.yaml
      responses:
        200:
          description: Password has been changed
        401:
          description: User unauthorized
          schema:
            type: string


  /settings:
    x-swagger-router-controller: settings.controller
    get:
      x-authentication-required: true
      x-admin-required: true
      description: Returns all config properties
      tags:
        - settings
      operationId: getSettings
      responses:
        200:
          description: settings returned
          schema:
            $ref: defs/Settings.yaml
        401:
          description: User unauthorized
          schema:
            type: string
    patch:
      x-authentication-required: true
      x-admin-required: true
      description: Applies new settings for gallery
      tags:
        - settings
      operationId: modifySettings
      parameters:
        - name: Settings
          in: body
          description: Settings object
          schema:
            $ref: defs/Settings.yaml
      responses:
        200:
          description: settings modified
        401:
          description: User unauthorized
          schema:
            type: string


  /settings/library-dir/validation:
    x-swagger-router-controller: settings.controller
    post:
      x-authentication-required: true
      x-admin-required: true
      description: Validates library directory
      tags:
        - settings
      operationId: validateLibraryDir
      parameters:
        - name: LibraryDirValidationRequest
          in: body
          description: Settings object
          schema:
            $ref: defs/LibraryDirValidationRequest.yaml
      responses:
        200:
          description: settings returned
          schema:
            $ref: defs/Validation.yaml
        401:
          description: User unauthorized
          schema:
            type: string


definitions:
  Album:
    $ref: defs/Album.yaml
  AlbumCreate:
    $ref: defs/AlbumCreateRequest.yaml
  AlbumUpdateRequest:
    $ref: defs/AlbumUpdateRequest.yaml
  AlbumCreateResponse:
    $ref: defs/AlbumCreateResponse.yaml    
  Image:
    $ref: defs/Image.yaml
  AlbumsResponse:
    $ref: defs/AlbumsResponse.yaml
  Config:
    $ref: defs/Config.yaml
  DirectoryCreateRequest:
    $ref: defs/DirectoryCreateRequest.yaml
  ImagesResponse:
    $ref: defs/ImagesResponse.yaml
  ImagesAddRequest:
    $ref: defs/ImagesAddRequest.yaml
  ImagesOrderRequest:
    $ref: defs/ImagesOrderRequest.yaml
  ImagesRemovalRequest:
    $ref: defs/ImagesRemovalRequest.yaml
  LibraryFile:
    $ref: defs/LibraryFile.yaml
  LibraryDirValidationRequest:
    $ref: defs/LibraryDirValidationRequest.yaml
  FilesResponse:
    $ref: defs/LibraryFilesResponse.yaml
  Login:
    $ref: defs/Login.yaml
  Settings:
    $ref: defs/Settings.yaml
  ThumbnailsCreateRequest:
    $ref: defs/ThumbnailsCreateRequest.yaml
  ProcessingRequest:
    $ref: defs/ProcessingRequest.yaml
  Processing:
    $ref: defs/Processing.yaml
  ProcessingImage:
    $ref: defs/ProcessingImage.yaml
  ProcessingParams:
    $ref: defs/ProcessingParams.yaml
  ProcessingRevertRequest:
    $ref: defs/ProcessingRevertRequest.yaml
  ProcessingResizeParams:
    $ref: defs/ProcessingResizeParams.yaml
  ProcessingSharpenParams:
    $ref: defs/ProcessingSharpenParams.yaml
  ProcessingExportParams:
    $ref: defs/ProcessingExportParams.yaml
  User:
    $ref: defs/User.yaml
  UsersResponse:
    $ref: defs/UsersResponse.yaml
  UserCreateRequest:
    $ref: defs/UserCreateRequest.yaml
  UserPasswordChangeRequest:
    $ref: defs/UserPasswordChangeRequest.yaml
  Validation:
    $ref: defs/Validation.yaml
