swagger: "2.0"
info:
  version: 1.0.0
  title: Image gallery api
basePath: /api
schemes:
- http
consumes:
- application/json
produces:
- application/json
- text/plain
paths:
  /albums:
    x-swagger-router-controller: albums
    get:
      description: Returns all albums meta definition from the gallery
      tags:
      - gallery
      operationId: getAlbums
      responses:
        200:
          description: offering created
          schema:
            $ref: defs/AlbumsResponse.yaml
        401:
          description: User unauthorized
          schema:
            type: string
    post:
      description: Creates a new album
      tags:
      - admin
      operationId: createAlbum
      parameters:
      - name: AlbumCreateRequest
        in: body
        description: Album create request
        schema:
          $ref: defs/AlbumCreateRequest.yaml
      responses:
        201:
          description: album created
  /library/files:
    x-swagger-router-controller: library
    get:
      description: Returns files from the library relative to given node
      tags:
      - library
      operationId: getFiles
      parameters:
      - in: query
        name: parent
        type: string
      responses:
        200:
          description: Files
          schema:
            $ref: defs/FilesResponse.yaml
        401:
          description: User unauthorized
          schema:
            type: string
  /albums/{id}/images:
    x-swagger-router-controller: albums
    get:
      description: Returns album with all images
      tags:
      - gallery
      operationId: getImages
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Id of the album
      responses:
        200:
          description: offering created
          schema:
            $ref: defs/ImagesResponse.yaml
        404:
          description: An album with given id was not found
  /login:
    x-swagger-router-controller: auth
    post:
      description: Logs user into the application
      tags:
      - auth
      operationId: login
      parameters:
        - name: LoginRequest
          in: body
          description: Login credentials
          schema:
            $ref: defs/Login.yaml
      responses:
        200:
          description: User authenticated
          schema:
            $ref: defs/User.yaml
        401:
          description: User unauthorized
          schema:
            type: string
  /user:
    x-swagger-router-controller: auth
    get:
      description: Logs user into the application
      tags:
      - auth
      operationId: getUser
      responses:
        200:
          description: User authenticated
          schema:
            $ref: defs/User.yaml
        401:
          description: User unauthorized
          schema:
            type: string
  /upload:
    x-swagger-router-controller: albums
    post:
      consumes:
      - multipart/form-data
      description: Logs user into the application
      tags:
      - admin
      operationId: uploadFile
      parameters:
      - in: formData
        name: file
        type: file
      responses:
        200:
          description: User authenticated
          schema:
            type: object
        401:
          description: User unauthorized
          schema:
            type: string
definitions:
  Album:
    $ref: defs/Album.yaml
  AlbumCreate:
    $ref: defs/AlbumCreateRequest.yaml
  Image:
    $ref: defs/Image.yaml
  AlbumsResponse:
    $ref: defs/AlbumsResponse.yaml
  ImagesResponse:
    $ref: defs/ImagesResponse.yaml
  FilesResponse:
    $ref: defs/FilesResponse.yaml
  Login:
    $ref: defs/Login.yaml
  User:
    $ref: defs/User.yaml
